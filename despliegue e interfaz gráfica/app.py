# -*- coding: utf-8 -*-
"""Despliegue de regresión de datos Calories.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WGom-5T-8WE2MAX6xHKDOGzM87Bfh6IU

# Despliegue

- Cargamos el modelo
- Cargamos los datos futuros
- Preparar los datos futuros
- Aplicamos el modelo para la predicción
"""

#Importamos librerías básicas
import pandas as pd # manipulacion dataframes
import numpy as np  # matrices y vectores
import matplotlib.pyplot as plt #gráfica

#Cargamos el modelo
import pickle
filename = 'modelo.pkl'
modelNN,variables,min_max_scaler = pickle.load(open(filename, 'rb'))

#Se crea interfaz gráfica con streamlit para captura de los datos

import streamlit as st

st.image("ejercicio.jpg")
st.title('Predicción de quema de calorías')
st.markdown('la predicción se usa teniendo en cuenta las variables de edad y peso de la persona, además del tiempo que duró haciendo ejercicio')



st.sidebar.title("Seleccion de variables")
Age= st.sidebar.slider('Seleccione la Edad', min_value=20, max_value=79, value=30, step=1)
Weight= st.sidebar.slider('Seleccione el peso', min_value=36, max_value=132, value=30, step=1)
Duration= st.sidebar.slider('Seleccione la duración', min_value=1, max_value=30, value=15, step=1)


datos = [[Age, Weight, Duration]]
data = pd.DataFrame(datos, columns=['Age', 'Weight', 'Duration']) #Dataframe con los mismos nombres de variables

#Se realiza la preparación debe ser igual al aprendizaje
data_preparada=data.copy()
#Despliegue siempre drop_first en false
data_preparada.head()

#Se adicionan las columnas faltantes
data_preparada=data_preparada.reindex(columns=variables,fill_value=0)
data_preparada.head()

#Normalización para RN
data_preparada[['Age', 'Weight', 'Duration']]= min_max_scaler.transform(data_preparada[['Age', 'Weight', 'Duration']])
data_preparada.head()

#Hacemos la predicción con Red Neuronal
Y_fut = modelNN.predict(data_preparada)
data['Pred Calorias quemadas']= Y_fut
data.head()

if st.sidebar.button("Predecir"):
  st.subheader("Resultado de la prediccion")
  data
else: 
  st.caption("*Seleccione las variables para realizar la prediccion*")

st.sidebar.button("Limpiar")


